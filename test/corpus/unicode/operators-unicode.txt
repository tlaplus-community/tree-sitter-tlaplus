=============|||
Unicode Operator Definitions
=============|||

---- MODULE Test ----
x ≈ y ≜ 0
x ≔ y ≜ 1
x ≍ y ≜ 2
x ◯ y ≜ 3
x ⩴ y ≜ 4
x ● y ≜ 5
x ∩ y ≜ 6
x ⋅ y ≜ 7
x ∘ y ≜ 8
x ≅ y ≜ 9
x ∪ y ≜ 10
x ÷ y ≜ 11
x ≐ y ≜ 12
x ‥ y ≜ 13
x … y ≜ 14
x ≡ y ≜ 15
x ‼ y ≜ 16
x ≥ y ≜ 17
x ≫ y ≜ 18
x ⇔ y ≜ 19
x ⇒ y ≜ 20
x ∈ y ≜ 21
x ∧ y ≜ 22
x ⫤ y ≜ 23
x ↝ y ≜ 24
x ≤ y ≜ 25
x ≪ y ≜ 26
x ∨ y ≜ 27
x ⊣ y ≜ 28
x ≠ y ≜ 29
x ∉ y ≜ 30
x ⊙ y ≜ 31
x ⊖ y ≜ 32
x ⊕ y ≜ 33
x ⊘ y ≜ 34
x ⊗ y ≜ 35
x ⇸ y ≜ 36
x ≺ y ≜ 37
x ⪯ y ≜ 38
x ∝ y ≜ 39
x ⁇ y ≜ 40
x ⊨ y ≜ 41
x ⊢ y ≜ 42
x ∼ y ≜ 43
x ≃ y ≜ 44
x ⊓ y ≜ 45
x ⊔ y ≜ 46
x ⊏ y ≜ 47
x ⊑ y ≜ 48
x ⊐ y ≜ 49
x ⊒ y ≜ 50
x ⋆ y ≜ 51
x ⊂ y ≜ 52
x ⊆ y ≜ 53
x ≻ y ≜ 54
x ⪰ y ≜ 55
x ⊃ y ≜ 56
x ⊇ y ≜ 57
x × y ≜ 58
x ⊎ y ≜ 59
x ‖ y ≜ 60
x ≀ y ≜ 61
□ x ≜ 62
◇ x ≜ 63
¬ x ≜ 64
x ⁺ ≜ 65
====

-------------|||

(source_file (module (header_line) name: (identifier) (header_line)
  (operator_definition parameter: (identifier) name: (infix_op_symbol (approx)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (assign)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (asymp)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (bigcirc)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (bnf_rule)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (bullet)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (cap)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (cdot)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (circ)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (cong)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (cup)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (div)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (doteq)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (dots_2)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (dots_3)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (equiv)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (excl)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (geq)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (gg)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (iff)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (implies)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (in)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (land)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (ld_ttile)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (leads_to)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (leq)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (ll)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (lor)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (ls_ttile)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (neq)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (notin)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (odot)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (ominus)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (oplus)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (oslash)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (otimes)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (plus_arrow)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (prec)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (preceq)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (propto)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (qq)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (rd_ttile)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (rs_ttile)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (sim)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (simeq)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (sqcap)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (sqcup)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (sqsubset)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (sqsubseteq)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (sqsupset)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (sqsupseteq)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (star)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (subset)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (subseteq)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (succ)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (succeq)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (supset)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (supseteq)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (times)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (uplus)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (vertvert)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (infix_op_symbol (wr)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition name: (prefix_op_symbol (always)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition name: (prefix_op_symbol (eventually)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition name: (prefix_op_symbol (lnot)) parameter: (identifier) (def_eq) definition: (nat_number))
  (operator_definition parameter: (identifier) name: (postfix_op_symbol (sup_plus)) (def_eq) definition: (nat_number))
(double_line)))

=============|||
Unicode Operator Declarations as Parameters
=============|||

---- MODULE Test ----
op(
  □ _,
  ◇ _,
  ¬ _,
  _ ≈ _,
  _ ≔ _,
  _ ≍ _,
  _ ◯ _,
  _ ⩴ _,
  _ ● _,
  _ ∩ _,
  _ ⋅ _,
  _ ∘ _,
  _ ≅ _,
  _ ∪ _,
  _ ÷ _,
  _ ≐ _,
  _ ‥ _,
  _ … _,
  _ ≡ _,
  _ ‼ _,
  _ ≥ _,
  _ ≫ _,
  _ ⇔ _,
  _ ⇒ _,
  _ ∈ _,
  _ ∧ _,
  _ ⫤ _,
  _ ↝ _,
  _ ≤ _,
  _ ≪ _,
  _ ∨ _,
  _ ⊣ _,
  _ ≠ _,
  _ ∉ _,
  _ ⊙ _,
  _ ⊖ _,
  _ ⊕ _,
  _ ⊘ _,
  _ ⊗ _,
  _ ⇸ _,
  _ ≺ _,
  _ ⪯ _,
  _ ∝ _,
  _ ⁇ _,
  _ ⊨ _,
  _ ⊢ _,
  _ ∼ _,
  _ ≃ _,
  _ ⊓ _,
  _ ⊔ _,
  _ ⊏ _,
  _ ⊑ _,
  _ ⊐ _,
  _ ⊒ _,
  _ ⋆ _,
  _ ⊂ _,
  _ ⊆ _,
  _ ≻ _,
  _ ⪰ _,
  _ ⊃ _,
  _ ⊇ _,
  _ × _,
  _ ⊎ _,
  _ ‖ _,
  _ ≀ _,
  _ ⁺
) ≜ 1
====

-------------|||

(source_file (module (header_line) name: (identifier) (header_line)
  (operator_definition name: (identifier)
    parameter: (operator_declaration name: (prefix_op_symbol (always)) (placeholder))
    parameter: (operator_declaration name: (prefix_op_symbol (eventually)) (placeholder))
    parameter: (operator_declaration name: (prefix_op_symbol (lnot)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (approx)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (assign)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (asymp)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (bigcirc)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (bnf_rule)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (bullet)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (cap)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (cdot)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (circ)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (cong)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (cup)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (div)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (doteq)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (dots_2)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (dots_3)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (equiv)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (excl)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (geq)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (gg)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (iff)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (implies)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (in)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (land)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (ld_ttile)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (leads_to)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (leq)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (ll)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (lor)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (ls_ttile)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (neq)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (notin)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (odot)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (ominus)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (oplus)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (oslash)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (otimes)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (plus_arrow)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (prec)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (preceq)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (propto)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (qq)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (rd_ttile)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (rs_ttile)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (sim)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (simeq)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (sqcap)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (sqcup)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (sqsubset)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (sqsubseteq)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (sqsupset)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (sqsupseteq)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (star)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (subset)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (subseteq)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (succ)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (succeq)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (supset)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (supseteq)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (times)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (uplus)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (vertvert)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (infix_op_symbol (wr)) (placeholder))
    parameter: (operator_declaration (placeholder) name: (postfix_op_symbol (sup_plus)))
    (def_eq)
    definition: (nat_number)
  )
(double_line)))

=============|||
Unicode Operator Application
=============|||

---- MODULE Test ----
op ≜ {
  □ x,
  ◇ x,
  ¬ x,
  x ≈ y,
  x ≔ y,
  x ≍ y,
  x ◯ y,
  x ⩴ y,
  x ● y,
  x ∩ y,
  x ⋅ y,
  x ∘ y,
  x ≅ y,
  x ∪ y,
  x ÷ y,
  x ≐ y,
  x ‥ y,
  x … y,
  x ≡ y,
  x ‼ y,
  x ≥ y,
  x ≫ y,
  x ⇔ y,
  x ⇒ y,
  x ∈ y,
  x ∧ y,
  x ⫤ y,
  x ↝ y,
  x ≤ y,
  x ≪ y,
  x ∨ y,
  x ⊣ y,
  x ≠ y,
  x ∉ y,
  x ⊙ y,
  x ⊖ y,
  x ⊕ y,
  x ⊘ y,
  x ⊗ y,
  x ⇸ y,
  x ≺ y,
  x ⪯ y,
  x ∝ y,
  x ⁇ y,
  x ⊨ y,
  x ⊢ y,
  x ∼ y,
  x ≃ y,
  x ⊓ y,
  x ⊔ y,
  x ⊏ y,
  x ⊑ y,
  x ⊐ y,
  x ⊒ y,
  x ⋆ y,
  x ⊂ y,
  x ⊆ y,
  x ≻ y,
  x ⪰ y,
  x ⊃ y,
  x ⊇ y,
  x × y,
  x ⊎ y,
  x ‖ y,
  x ≀ y,
  x ⁺
}
====

-------------|||

(source_file (module (header_line) name: (identifier) (header_line)
  (operator_definition name: (identifier) (def_eq) definition: (finite_set_literal
    (bound_prefix_op symbol: (always) rhs: (identifier_ref))
    (bound_prefix_op symbol: (eventually) rhs: (identifier_ref))
    (bound_prefix_op symbol: (lnot) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (approx) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (assign) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (asymp) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (bigcirc) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (bnf_rule) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (bullet) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (cap) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (cdot) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (circ) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (cong) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (cup) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (div) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (doteq) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (dots_2) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (dots_3) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (equiv) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (excl) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (geq) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (gg) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (iff) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (implies) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (in) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (land) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (ld_ttile) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (leads_to) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (leq) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (ll) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (lor) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (ls_ttile) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (neq) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (notin) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (odot) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (ominus) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (oplus) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (oslash) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (otimes) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (plus_arrow) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (prec) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (preceq) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (propto) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (qq) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (rd_ttile) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (rs_ttile) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (sim) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (simeq) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (sqcap) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (sqcup) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (sqsubset) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (sqsubseteq) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (sqsupset) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (sqsupseteq) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (star) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (subset) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (subseteq) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (succ) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (succeq) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (supset) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (supseteq) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (times) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (uplus) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (vertvert) rhs: (identifier_ref))
    (bound_infix_op lhs: (identifier_ref) symbol: (wr) rhs: (identifier_ref))
    (bound_postfix_op lhs: (identifier_ref) symbol: (sup_plus))
  ))
(double_line)))

=============|||
Unicode Operator References
=============|||

---- MODULE Test ----
op ≜ f(
  □,
  ◇,
  ¬,
  ≈,
  ≔,
  ≍,
  ◯,
  ⩴,
  ●,
  ∩,
  ⋅,
  ∘,
  ≅,
  ∪,
  ÷,
  ≐,
  ‥,
  …,
  ≡,
  ‼,
  ≥,
  ≫,
  ⇔,
  ⇒,
  ∈,
  ∧,
  ⫤,
  ↝,
  ≤,
  ≪,
  ∨,
  ⊣,
  ≠,
  ∉,
  ⊙,
  ⊖,
  ⊕,
  ⊘,
  ⊗,
  ⇸,
  ≺,
  ⪯,
  ∝,
  ⁇,
  ⊨,
  ⊢,
  ∼,
  ≃,
  ⊓,
  ⊔,
  ⊏,
  ⊑,
  ⊐,
  ⊒,
  ⋆,
  ⊂,
  ⊆,
  ≻,
  ⪰,
  ⊃,
  ⊇,
  ×,
  ⊎,
  ‖,
  ≀,
  ⁺
)
====

-------------|||

(source_file (module (header_line) name: (identifier) (header_line)
  (operator_definition name: (identifier) (def_eq) definition: (bound_op name: (identifier_ref)
    parameter: (prefix_op_symbol (always))
    parameter: (prefix_op_symbol (eventually))
    parameter: (prefix_op_symbol (lnot))
    parameter: (infix_op_symbol (approx))
    parameter: (infix_op_symbol (assign))
    parameter: (infix_op_symbol (asymp))
    parameter: (infix_op_symbol (bigcirc))
    parameter: (infix_op_symbol (bnf_rule))
    parameter: (infix_op_symbol (bullet))
    parameter: (infix_op_symbol (cap))
    parameter: (infix_op_symbol (cdot))
    parameter: (infix_op_symbol (circ))
    parameter: (infix_op_symbol (cong))
    parameter: (infix_op_symbol (cup))
    parameter: (infix_op_symbol (div))
    parameter: (infix_op_symbol (doteq))
    parameter: (infix_op_symbol (dots_2))
    parameter: (infix_op_symbol (dots_3))
    parameter: (infix_op_symbol (equiv))
    parameter: (infix_op_symbol (excl))
    parameter: (infix_op_symbol (geq))
    parameter: (infix_op_symbol (gg))
    parameter: (infix_op_symbol (iff))
    parameter: (infix_op_symbol (implies))
    parameter: (infix_op_symbol (in))
    parameter: (infix_op_symbol (land))
    parameter: (infix_op_symbol (ld_ttile))
    parameter: (infix_op_symbol (leads_to))
    parameter: (infix_op_symbol (leq))
    parameter: (infix_op_symbol (ll))
    parameter: (infix_op_symbol (lor))
    parameter: (infix_op_symbol (ls_ttile))
    parameter: (infix_op_symbol (neq))
    parameter: (infix_op_symbol (notin))
    parameter: (infix_op_symbol (odot))
    parameter: (infix_op_symbol (ominus))
    parameter: (infix_op_symbol (oplus))
    parameter: (infix_op_symbol (oslash))
    parameter: (infix_op_symbol (otimes))
    parameter: (infix_op_symbol (plus_arrow))
    parameter: (infix_op_symbol (prec))
    parameter: (infix_op_symbol (preceq))
    parameter: (infix_op_symbol (propto))
    parameter: (infix_op_symbol (qq))
    parameter: (infix_op_symbol (rd_ttile))
    parameter: (infix_op_symbol (rs_ttile))
    parameter: (infix_op_symbol (sim))
    parameter: (infix_op_symbol (simeq))
    parameter: (infix_op_symbol (sqcap))
    parameter: (infix_op_symbol (sqcup))
    parameter: (infix_op_symbol (sqsubset))
    parameter: (infix_op_symbol (sqsubseteq))
    parameter: (infix_op_symbol (sqsupset))
    parameter: (infix_op_symbol (sqsupseteq))
    parameter: (infix_op_symbol (star))
    parameter: (infix_op_symbol (subset))
    parameter: (infix_op_symbol (subseteq))
    parameter: (infix_op_symbol (succ))
    parameter: (infix_op_symbol (succeq))
    parameter: (infix_op_symbol (supset))
    parameter: (infix_op_symbol (supseteq))
    parameter: (infix_op_symbol (times))
    parameter: (infix_op_symbol (uplus))
    parameter: (infix_op_symbol (vertvert))
    parameter: (infix_op_symbol (wr))
    parameter: (postfix_op_symbol (sup_plus))
  ))
(double_line)))

=============|||
Nonfix Unicode Operators
=============|||

---- MODULE Test ----
op ≜ {
  A!B!□(x),
  A!B!◇(x),
  A!B!¬(x),
  A!B!≈(x, y),
  A!B!≔(x, y),
  A!B!≍(x, y),
  A!B!◯(x, y),
  A!B!⩴(x, y),
  A!B!●(x, y),
  A!B!∩(x, y),
  A!B!⋅(x, y),
  A!B!∘(x, y),
  A!B!≅(x, y),
  A!B!∪(x, y),
  A!B!÷(x, y),
  A!B!≐(x, y),
  A!B!‥(x, y),
  A!B!…(x, y),
  A!B!≡(x, y),
  A!B!‼(x, y),
  A!B!≥(x, y),
  A!B!≫(x, y),
  A!B!⇔(x, y),
  A!B!⇒(x, y),
  A!B!∈(x, y),
  A!B!∧(x, y),
  A!B!⫤(x, y),
  A!B!↝(x, y),
  A!B!≤(x, y),
  A!B!≪(x, y),
  A!B!∨(x, y),
  A!B!⊣(x, y),
  A!B!≠(x, y),
  A!B!∉(x, y),
  A!B!⊙(x, y),
  A!B!⊖(x, y),
  A!B!⊕(x, y),
  A!B!⊘(x, y),
  A!B!⊗(x, y),
  A!B!⇸(x, y),
  A!B!≺(x, y),
  A!B!⪯(x, y),
  A!B!∝(x, y),
  A!B!⁇(x, y),
  A!B!⊨(x, y),
  A!B!⊢(x, y),
  A!B!∼(x, y),
  A!B!≃(x, y),
  A!B!⊓(x, y),
  A!B!⊔(x, y),
  A!B!⊏(x, y),
  A!B!⊑(x, y),
  A!B!⊐(x, y),
  A!B!⊒(x, y),
  A!B!⋆(x, y),
  A!B!⊂(x, y),
  A!B!⊆(x, y),
  A!B!≻(x, y),
  A!B!⪰(x, y),
  A!B!⊃(x, y),
  A!B!⊇(x, y),
  A!B!×(x, y),
  A!B!⊎(x, y),
  A!B!‖(x, y),
  A!B!≀(x, y),
  A!B!⁺(x)
}
====

-------------|||
(source_file (module (header_line) name: (identifier) (header_line)
  (operator_definition name: (identifier) (def_eq) definition: (finite_set_literal
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (prefix_op_symbol (always)) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (prefix_op_symbol (eventually)) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (prefix_op_symbol (lnot)) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (approx)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (assign)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (asymp)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (bigcirc)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (bnf_rule)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (bullet)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (cap)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (cdot)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (circ)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (cong)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (cup)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (div)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (doteq)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (dots_2)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (dots_3)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (equiv)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (excl)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (geq)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (gg)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (iff)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (implies)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (in)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (land)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (ld_ttile)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (leads_to)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (leq)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (ll)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (lor)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (ls_ttile)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (neq)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (notin)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (odot)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (ominus)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (oplus)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (oslash)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (otimes)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (plus_arrow)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (prec)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (preceq)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (propto)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (qq)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (rd_ttile)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (rs_ttile)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (sim)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (simeq)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (sqcap)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (sqcup)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (sqsubset)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (sqsubseteq)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (sqsupset)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (sqsupseteq)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (star)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (subset)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (subseteq)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (succ)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (succeq)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (supset)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (supseteq)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (times)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (uplus)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (vertvert)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (infix_op_symbol (wr)) (identifier_ref) (identifier_ref)))
    (prefixed_op prefix: (subexpr_prefix (subexpr_component (identifier_ref)) (subexpr_component (identifier_ref))) op:
      (bound_nonfix_op symbol: (postfix_op_symbol (sup_plus)) (identifier_ref)))
  ))
(double_line)))

=============|||
Unicode Junct Tokens as Higher-Level Parameters (GH TSTLA #96)
=============|||

---- MODULE Test ----
op == op(∧, x, ∧)
op == op(∨, x, ∨)
====

--------------|||

(source_file (module (header_line) name: (identifier) (header_line)
  (operator_definition name: (identifier) (def_eq) definition:
    (bound_op name: (identifier_ref)
      parameter: (infix_op_symbol (land))
      parameter: (identifier_ref)
      parameter: (infix_op_symbol (land))
    )
  )
  (operator_definition name: (identifier) (def_eq) definition:
    (bound_op name: (identifier_ref)
      parameter: (infix_op_symbol (lor))
      parameter: (identifier_ref)
      parameter: (infix_op_symbol (lor))
    )
  )
(double_line)))

