===============================|||
Proof Step ID in Expression
===============================|||

---- MODULE Test ----
op == <1>a
====

-------------------------------|||

(source_file (module (single_line) (identifier) (single_line)
  (unit (operator_definition
    (identifier) (def_eq) (proof_step_ref (level) (name))
  ))
(double_line)))

===============================|||
Obvious Proof
===============================|||

---- MODULE Test ----
THEOREM TRUE
OBVIOUS
====

-------------------------------|||

(source_file (module (single_line) (identifier) (single_line)
  (unit (theorem (boolean)
    (terminal_proof)
  ))
(double_line)))

===============================|||
Omitted Proof
===============================|||

---- MODULE Test ----
THEOREM TRUE
PROOF OMITTED
====

-------------------------------|||

(source_file (module (single_line) (identifier) (single_line)
  (unit (theorem (boolean)
    (terminal_proof)
  ))
(double_line)))

===============================|||
Proof by Definition
===============================|||

---- MODULE Test ----
THEOREM TRUE
PROOF BY DEF >
====

-------------------------------|||

(source_file (module (single_line) (identifier) (single_line)
  (unit (theorem (boolean)
    (terminal_proof (use_body
      (use_body_def (infix_op_symbol (gt)))
    ))
  ))
(double_line)))

===============================|||
Proof by Multiple Definitions
===============================|||

---- MODULE Test ----
THEOREM TRUE
PROOF BY ONLY
  P,
  MODULE Naturals,
  Q,
  MODULE Integers
  DEFS
    >,
    R,
    MODULE Reals,
    =
====

-------------------------------|||

(source_file (module (single_line) (identifier) (single_line)
  (unit (theorem (boolean)
    (terminal_proof (use_body
      (use_body_expr
        (identifier_ref)
        (module_ref (identifier_ref))
        (identifier_ref)
        (module_ref (identifier_ref))
      )
      (use_body_def
        (infix_op_symbol (gt))
        (identifier_ref)
        (module_ref (identifier_ref))
        (infix_op_symbol (eq))
      )
    ))
  ))
(double_line)))

===============================|||
Proof by QED
===============================|||

---- MODULE Test ----
THEOREM TRUE
PROOF <1>a QED
====

-------------------------------|||

(source_file (module (single_line) (identifier) (single_line)
  (unit (theorem (boolean)
    (non_terminal_proof
      (qed_step (proof_step_id (level) (name)))
    )
  ))
(double_line)))
